{"version":3,"sources":["util/CreateBoard.js","components/Circle.js","util/MineColors.js","components/Cell.js","components/Timer.js","components/Modal.js","components/Board.js","util/Reveal.js","App.js","reportWebVitals.js","index.js"],"names":["randomNum","min","arguments","length","undefined","max","Math","floor","random","Circle","react_default","a","createElement","style","display","justifyContent","alignItems","height","width","borderRadius","background","MineColor","colors","timeIntervalId","bombChexPattern","x","y","chexPattern","numColorCode","num","Cell","_ref","revealCell","details","updateFlag","cellstyle","revealed","value","color","onContextMenu","e","onClick","className","flagged","Modal","restartGame","_useState","useState","_useState2","Object","slicedToArray","render","setRender","useEffect","setTimeout","opacity","position","id","Timer","gameOver","sendTime","time","setTime","console","log","fontSize","role","aria-label","paddingRight","Board","grid","setGrid","_useState3","_useState4","nonMineCount","setnonMineCount","_useState5","_useState6","mineLocations","setMineLocation","_useState7","_useState8","gameover","setGameover","freshBoard","newBoard","row","col","bombs","board","mineLocation","subCol","push","bombsCount","roww","coll","CreateBoard","preventDefault","newGrid","JSON","parse","stringify","i","newRevealedBoard","arr","newNonMinesCount","flipped","single","pop","flexDirection","map","singleRow","index1","key","singleBlock","index2","components_Cell","App","components_Board","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46277689.chunk.js","sourcesContent":["export default (row, col, bombs) => {\r\n    let board = [];\r\n    let mineLocation = [];\r\n    // Create blank board\r\n  \r\n    // x = column\r\n    for (let x = 0; x < row; x++) {\r\n      let subCol = [];\r\n      for (let y = 0; y < col; y++) {\r\n        //pushing the elements as objects in array\r\n        subCol.push({\r\n          value: 0,\r\n          revealed: false,\r\n          x: x,\r\n          y: y,\r\n          flagged: false,\r\n        });\r\n      }\r\n      board.push(subCol);\r\n    }\r\n  \r\n    // Randomize and place Bomb Placement\r\n    let bombsCount = 0;\r\n    while (bombsCount < bombs) {\r\n      //returns random numbers between [0,row-1],etc\r\n      let x = randomNum(0, row - 1);\r\n      let y = randomNum(0, col - 1);\r\n  \r\n      if (board[x][y].value === 0) {\r\n        board[x][y].value = \"X\";\r\n        mineLocation.push([x, y]);\r\n        bombsCount++;\r\n      }\r\n    }\r\n  \r\n    // Add Numbers\r\n    for (let roww = 0; roww < row; roww++) {\r\n      for (let coll = 0; coll < col; coll++) {\r\n        if (board[roww][coll].value === \"X\") {\r\n          continue;\r\n        }\r\n  \r\n        // Top\r\n        if (roww > 0 && board[roww - 1][coll].value === \"X\") {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Top Right\r\n        if (\r\n          roww > 0 &&\r\n          coll < col - 1 &&\r\n          board[roww - 1][coll + 1].value === \"X\"\r\n        ) {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Right\r\n        if (coll < col - 1 && board[roww][coll + 1].value === \"X\") {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Botoom Right\r\n        if (\r\n          roww < row - 1 &&\r\n          coll < col - 1 &&\r\n          board[roww + 1][coll + 1].value === \"X\"\r\n        ) {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Bottom\r\n        if (roww < row - 1 && board[roww + 1][coll].value === \"X\") {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Bottom Left\r\n        if (\r\n          roww < row - 1 &&\r\n          coll > 0 &&\r\n          board[roww + 1][coll - 1].value === \"X\"\r\n        ) {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // LEft\r\n        if (coll > 0 && board[roww][coll - 1].value === \"X\") {\r\n          board[roww][coll].value++;\r\n        }\r\n  \r\n        // Top Left\r\n        if (roww > 0 && coll > 0 && board[roww - 1][coll - 1].value === \"X\") {\r\n          board[roww][coll].value++;\r\n        }\r\n      }\r\n    }\r\n    //return the whole object containing board and the loaction of mines\r\n    return { board, mineLocation };\r\n  };\r\n  \r\n  function randomNum(min = 0, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }","import React from \"react\";\r\n\r\nexport default function Circle() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: 23,\r\n          width: 23,\r\n          borderRadius: 20,\r\n          background: \"rgba(0,0,0,0.4)\",\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}","export const MineColor=()=>{\r\n    let colors = ['orange','darkgreen','cyan','violet','yellow']\r\n    return colors[Math.floor(Math.random()*colors.length)]\r\n}","import React from 'react'\r\nimport \"../App.css\";\r\nimport Circle from \"./Circle\"\r\nimport { MineColor } from \"../util/MineColors\";\r\n//details and updateFlag as props to cell\r\nfunction Cell({revealCell,details,updateFlag}) {\r\n    const cellstyle ={\r\n\r\n        background: details.revealed\r\n          ? details.value ===\"X\"\r\n            ? MineColor()\r\n            : bombChexPattern(details.x,details.y)\r\n          : chexPattern(details.x,details.y),\r\n          color:numColorCode(details.value)\r\n       \r\n    }\r\n  \r\n  return (\r\n    <div    onContextMenu={(e)=>updateFlag(e,details.x,details.y)}\r\n            style={cellstyle}\r\n            onClick={()=>revealCell(details.x,details.y)}\r\n            className=\"cellStyle\">\r\n              {/* reveal the value only if set true*/}\r\n        {!details.revealed && details.flagged ? (\"👿\")\r\n        :details.revealed && details.value!==0 ?(details.value==='X'\r\n        ? (<Circle/>)\r\n        : (\r\n          details.value\r\n        )\r\n  ):(\"\")}  \r\n    </div>\r\n  )\r\n}\r\nconst bombChexPattern = (x, y) => {\r\n  if (x % 2 === 0 && y % 2 === 0) {\r\n    return \"#e5c29f\";\r\n  } else if (x % 2 === 0 && y % 2 !== 0) {\r\n    return \"#d7b899\";\r\n  } else if (x % 2 !== 0 && y % 2 === 0) {\r\n    return \"#d7b899\";\r\n  } else {\r\n    return \"#e5c29f\";\r\n  }\r\n};\r\n\r\nconst chexPattern = (x, y) => {\r\n  if (x % 2 === 0 && y % 2 === 0) {\r\n    return \"#aad751\";\r\n  } else if (x % 2 === 0 && y % 2 !== 0) {\r\n    return \"#a2d249\";\r\n  } else if (x % 2 !== 0 && y % 2 === 0) {\r\n    return \"#a2d249\";\r\n  } else {\r\n    return \"#aad751\";\r\n  }\r\n};\r\n\r\nconst numColorCode = (num) => {\r\n  if (num === 1) {\r\n    return \"#1976d2\";\r\n  } else if (num === 2) {\r\n    return \"#388d3c\";\r\n  } else if (num === 3) {\r\n    return \"#d33030\";\r\n  } else if (num === 4) {\r\n    return \"#7c21a2\";\r\n  } else if (num === 5) {\r\n    return \"#1976d2\";\r\n  } else if (num === 6) {\r\n    return \"#1976d2\";\r\n  } else {\r\n    return \"white\";\r\n  }\r\n};\r\n\r\nexport default Cell\r\n","import React, { useState, useEffect } from \"react\";\r\nlet timeIntervalId;\r\nexport default function Timer({ gameOver, sendTime }) {\r\n  let [time, setTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function incrementTime() {\r\n        setTimeout(()=>{\r\n            let newtime = time+1;\r\n            setTime(newtime)\r\n        },1000)\r\n    }\r\n    incrementTime()\r\n  }, [time]);\r\n\r\n  console.log(timeIntervalId);\r\n  return (\r\n    <div style={{ color: \"white\", fontSize: 20, background: \"maroon\" }}>\r\n      <span role=\"img\" aria-label=\"clock\" style={{ paddingRight: 10 }}>\r\n        ⏰\r\n      </span>\r\n      {time}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Modal({ restartGame }) {\r\n  const [render, setRender] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setRender(true);\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        opacity: render ? 1 : 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        background: \"rgba(0,0,0,0.3)\",\r\n      }}\r\n    >\r\n      <div id=\"gameOverImage\"></div>\r\n      <div className=\"tryAgain\" \r\n            onClick={()=>restartGame()} >\r\n        Try Again\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React,{useEffect, useState} from \"react\";\r\nimport CreateBoard from \"../util/CreateBoard\";\r\nimport Cell from \"./Cell\";\r\nimport { revealed } from \"../util/Reveal\";\r\nimport Modal from \"./Modal\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst Board =()=>{\r\n    //creating the board as a grid ie.2d array initialy empty\r\n    const [grid, setGrid] = useState([]);\r\n\r\n    //no of non mines on the board\r\n    const [nonMineCount,setnonMineCount] = useState(0)\r\n    const [mineLocations,setMineLocation] = useState([])\r\n    const [gameover,setGameover] = useState(false)\r\n    //componentDidMount\r\n    useEffect(()=>{\r\n        //function to create the fresh board on render\r\n        \r\n        //calls create board component\r\n        freshBoard();\r\n    },[])\r\n    const freshBoard =()=>{\r\n        const newBoard = CreateBoard(10,15,15);\r\n        setnonMineCount(10*15-15)\r\n        setMineLocation(newBoard.mineLocation)\r\n        console.log(newBoard)\r\n        //seting the state as board returned by the createboard comp\r\n        setGrid(newBoard.board);\r\n    }\r\n\r\n    const restartGame=()=>{\r\n        freshBoard()\r\n        setGameover(false)\r\n    }\r\n\r\n    //right click flag functionality flag a cell\r\n    //callback function\r\n    const updateFlag = (e,x,y)=>{\r\n        //to prevent default right click menu appearance\r\n        e.preventDefault();\r\n        //creates a deep copy of state- grid of array of objects\r\n        //it will prevent to mess with state grid\r\n        //it will reassgin the state by transforming grid into js object\r\n        let newGrid = JSON.parse(JSON.stringify(grid))\r\n        console.log(newGrid[x][y])\r\n        //set the flagged to true as we clicked right\r\n        newGrid[x][y].flagged  = true\r\n        setGrid(newGrid)\r\n    }\r\n    //reveal the cell function \r\n    const revealCell = (x,y)=>{\r\n        if(grid[x][y].revealed || gameover){\r\n            return;\r\n        }\r\n        let newGrid = JSON.parse(JSON.stringify(grid))\r\n        //alert if we clicked a mine\r\n        if(newGrid[x][y].value==='X'){\r\n            \r\n            for(let i =0;i<mineLocations.length;i++){\r\n                newGrid[mineLocations[i][0]][mineLocations[i][1]].revealed = true \r\n            }\r\n            setGrid(newGrid)\r\n            setGameover(true)\r\n        }\r\n        else{ \r\n            //calling the revealed function from Reveal.js util comp\r\n            let newRevealedBoard = revealed(newGrid,x,y,nonMineCount)\r\n            //revealing the cell\r\n            newGrid[x][y].revealed =true;\r\n            //changing the state now\r\n            setGrid(newRevealedBoard.arr)\r\n            setnonMineCount(newRevealedBoard.newNonMinesCount)\r\n            if(newRevealedBoard.newNonMinesCount===0)\r\n                setGameover(true)\r\n        }\r\n        \r\n    }\r\n    \r\n    //map function to return the numbers and mines of board\r\n    //and to apply required css(flex) when we return \r\n    //first map function for rows\r\n    //second for each element in each row\r\n    return(\r\n        <div>\r\n            <p>Minesweeper</p>\r\n            <Timer/>\r\n            <div style={{display:\"flex\",\r\n                        alignItems:\"center\",\r\n                        position:'relative',\r\n                        flexDirection: \"column\"}}>\r\n            {gameover && <Modal restartGame={restartGame}/>}                \r\n            { grid.map((singleRow,index1)=>{\r\n        //each row\r\n        return(\r\n            <div style={{display: \"flex\"}} key = {index1}>\r\n                {singleRow.map((singleBlock,index2)=>{\r\n                    return (\r\n                        //each cell\r\n                        <Cell   revealCell={revealCell}\r\n                                details={singleBlock}\r\n                                updateFlag={updateFlag} key = {index2}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    })}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\nexport default Board;","export const revealed = (arr, x, y, newNonMinesCount) => {\r\n    console.log(arr[x][y]);\r\n    if (arr[x][y].revealed) {\r\n      // console.log(arr[x][y])\r\n      return;\r\n    }\r\n  \r\n    // Stack of all the cells which we\r\n    // would like to reveal/flip\r\n    let flipped = [];\r\n    flipped.push(arr[x][y]);\r\n    while (flipped.length !== 0) {\r\n      let single = flipped.pop();\r\n  \r\n      if (!single.revealed) {\r\n        newNonMinesCount--;\r\n        single.revealed = true;\r\n      }\r\n  \r\n      if (single.value !== 0) {\r\n        break;\r\n      }\r\n  \r\n      //Top - Left\r\n      if (\r\n        single.x > 0 &&\r\n        single.y > 0 &&\r\n        arr[single.x - 1][single.y - 1].value === 0 &&\r\n        !arr[single.x - 1][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y - 1]);\r\n      }\r\n  \r\n      // Bottom - Right\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x + 1][single.y + 1].value === 0 &&\r\n        !arr[single.x + 1][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y + 1]);\r\n      }\r\n  \r\n      // Bottom - Left\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y > 0 &&\r\n        arr[single.x + 1][single.y - 1].value === 0 &&\r\n        !arr[single.x + 1][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y - 1]);\r\n      }\r\n  \r\n      // Top - Right\r\n      if (\r\n        single.x > 0 &&\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x - 1][single.y + 1].value === 0 &&\r\n        !arr[single.x - 1][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y + 1]);\r\n      }\r\n  \r\n      // Single ones\r\n  \r\n      // Top\r\n      if (\r\n        single.x > 0 &&\r\n        arr[single.x - 1][single.y].value === 0 &&\r\n        !arr[single.x - 1][single.y].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y]);\r\n      }\r\n  \r\n      // Bottom\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        arr[single.x + 1][single.y].value === 0 &&\r\n        !arr[single.x + 1][single.y].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y]);\r\n      }\r\n  \r\n      // Left\r\n      if (\r\n        single.y > 0 &&\r\n        arr[single.x][single.y - 1].value === 0 &&\r\n        !arr[single.x][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x][single.y - 1]);\r\n      }\r\n  \r\n      // Right\r\n      if (\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x][single.y + 1].value === 0 &&\r\n        !arr[single.x][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x][single.y + 1]);\r\n      }\r\n  \r\n      // Start Revealing Items\r\n      if (\r\n        single.x > 0 &&\r\n        single.y > 0 &&\r\n        !arr[single.x - 1][single.y - 1].revealed\r\n      ) {\r\n        //Top Left Reveal\r\n  \r\n        arr[single.x - 1][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.y > 0 && !arr[single.x][single.y - 1].revealed) {\r\n        // Left Reveal\r\n        arr[single.x][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y > 0 &&\r\n        !arr[single.x + 1][single.y - 1].revealed\r\n      ) {\r\n        //Bottom Left Reveal\r\n        arr[single.x + 1][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.x > 0 && !arr[single.x - 1][single.y].revealed) {\r\n        //Top Reveal\r\n        arr[single.x - 1][single.y].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.x < arr.length - 1 && !arr[single.x + 1][single.y].revealed) {\r\n        // Bottom Reveal\r\n        arr[single.x + 1][single.y].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x > 0 &&\r\n        single.y < arr[0].length - 1 &&\r\n        !arr[single.x - 1][single.y + 1].revealed\r\n      ) {\r\n        // Top Right Reveal\r\n        arr[single.x - 1][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.y < arr[0].length - 1 && !arr[single.x][single.y + 1].revealed) {\r\n        //Right Reveal\r\n        arr[single.x][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y < arr[0].length - 1 &&\r\n        !arr[single.x + 1][single.y + 1].revealed\r\n      ) {\r\n        // Bottom Right Reveal\r\n        arr[single.x + 1][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n    }\r\n  \r\n    return { arr, newNonMinesCount };\r\n  };","import './App.css';\nimport Board from './components/Board.js'\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>minesweeper</h1>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}